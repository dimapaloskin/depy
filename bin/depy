#!/usr/bin/env node

'use strict';

const path = require('path');
const meow = require('meow');
const bzz = require('bzz');
const chalk = require('chalk');
const Depy = require('./../lib');
const pkg = require('./../package.json');

const helpMesssage = bzz(`

  Usage: depy

  Available flags:

    ${chalk.bold('--help')} - show this message
    ${chalk.bold('--dir')} - project directory ${chalk.dim('(current directory by default)')}
    ${chalk.bold('--cache-dir')} - cache directory ${chalk.dim('(depy installation directory by default)')}

  Run ${chalk.bold('depy cache')} to recreate cache without running package managers

  ${pkg.name}@${pkg.version}
`, 2);

const cli = meow(helpMesssage, {});

const directory = cli.flags.dir || process.cwd();
const options = {};

// resolve cache directory
// stored in "./node_modules/depy" by default
options.cacheDir = (cli.flags.cacheDir && typeof cli.flags.cacheDir === 'string') ?
  path.resolve(`${cli.flags.cacheDir}/.cache`) :
  path.resolve(`${__dirname}/../.cache`);

const depy = new Depy(directory, options);

if (cli.input.length !== 0 && cli.input[0] === 'cache') {
  const files = depy.collect();
  depy.createCache(files);
} else {
  depy.run();
}
